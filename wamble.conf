;; Default configuration
(def port 8888)
(def timeout-ms 100)
(def max-retries 3)
(def max-message-size 126)
(def buffer-size 65536)
(def max-client-sessions 1024)
(def session-timeout 300)
(def max-boards 1024)
(def min-boards 4)
(def inactivity-timeout 300)
(def reservation-timeout 2)
(def k-factor 32)
(def default-rating 1200)
(def max-players 1024)
(def token-expiration 86400)
(def max-pot 20.0)
(def max-moves-per-board 1000)
(def max-contributors 100)
(def db-host "localhost")
(def db-user "wamble")
(def db-pass "wamble")
(def db-name "wamble")
(def select-timeout-usec 100000)
(def cleanup-interval-sec 60)
(def max-token-attempts 1000)
(def max-token-local-attempts 100)
(def db-log-frequency 1000)
(def log-level 3) ;; 0=FATAL,1=ERROR,2=WARN,3=INFO,4=DEBUG
;; Optional per-module overrides (-1 inherits from global)
(def log-level-main -1)
(def log-level-network -1)
(def log-level-database -1)
(def log-level-board-manager -1)
(def log-level-player-manager -1)
(def log-level-move-engine -1)
(def log-level-scoring -1)

;; Helper for computed values
(defn port-for (base offset) (+ base offset))

;; Base profile to inherit from (not advertised directly)
(defprofile base
  ((def advertise 0)
   (def visibility 0)
   (def db-host "localhost")
   (def db-user "wamble")
   (def db-pass "wamble")
   (def db-name "wamble")
   (def log-level 3)))

;; Two advertised profiles on unique ports sharing the same DB config
(defprofile canary :inherits base
  ((def port (port-for 8800 91))
   (def advertise 1)
   (def visibility 1)
   (def log-level 4)))      ;; DEBUG for this profile

;; Inheritance using list form of :inherits
(defprofile blue
  ((:inherits base ((def port (port-for 8800 92))
                    (def advertise 1)
                    (def visibility 2)
                    (def log-level-network 2)))))

;; Non-advertised test profile (separate DB allowed since it's hidden)
(defprofile test
  ((def port 8890)
   (def db-name "wamble_test")
   (def advertise 0)        ;; hidden from normal clients
   (def visibility 100)     ;; high trust level
   (def log-level 4)
   (def log-level-database 4)))
