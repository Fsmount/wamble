Wamble Network Protocol
=======================

Overview
- Transport: UDP, non-blocking sockets.
- Topology: Single server, multiple listeners (one per profile).
- Reliability: Application-level ACK with retries.
- Encoding: Base64url for tokens (logs/URLs).

Message Layout
- Common header (all packets):
  - `ctrl` (uint8): Control code for packet type.
  - `flags` (uint8): `0x80` bit indicates unreliable packet.
  - `version` (uint8): Protocol version (currently 1).
  - `reserved` (uint8): Must be 0.
  - `token` (uint8[16]): Session token.
  - `board_id` (uint64): Board context (0 if not applicable).
  - `seq_num` (uint32): Reliable sequencing number.
  - `payload_len` (uint16): Length of payload data.
- Endianness:
  - `board_id`: Big-endian (8 bytes).
  - `seq_num`, `payload_len`: Network byte order (big-endian).
- Token URL form: 22-char base64url string (no padding).

Control Codes
- `0x01` CLIENT_HELLO (client→server): Initial connection request.
  - Payload: empty.
- `0x02` SERVER_HELLO (server→client): Response to HELLO.
  - Payload: `char fen[]` (current board state).
- `0x03` PLAYER_MOVE (client→server): Submit a move.
  - Payload: `uint8 uci_len; char uci[uci_len]` (max 6 bytes).
- `0x04` BOARD_UPDATE (server→client): Board state has changed.
  - Payload: `char fen[]`.
- `0x05` ACK (bidirectional): Acknowledges a reliable packet.
  - Payload: empty. Header `seq_num` matches the packet being ACKed.
- `0x06` LIST_PROFILES (client→server): Request available profiles.
  - Payload: empty.
- `0x07` PROFILE_INFO (server→client): Response to GET_PROFILE_INFO.
  - Payload: `name;port;advertise;visibility` or `NOTFOUND;<name>`.
- `0x08` ERROR (server→client): Reports an error.
  - Payload: `uint16 code; uint8 reason_len; char reason[reason_len]`.
  - Reliable by default.
- `0x09` SERVER_NOTIFICATION (server→client): Broadcast message.
  - Payload: `char text[]`. Often sent as unreliable.
- `0x0A` CLIENT_GOODBYE (client→server): Graceful disconnect.
  - Payload: empty.
- `0x0B` SPECTATE_GAME (client→server): Request to watch a game.
  - Payload: empty. `board_id` in header specifies the game.
- `0x0C` SPECTATE_UPDATE (server→client): Board update for spectators.
  - Payload: `char fen[]`. Typically sent as unreliable.
- `0x0D` LOGIN_REQUEST (client→server): Authenticate persistent identity.
  - Payload: `uint8 public_key[32]`.
- `0x0E` LOGOUT (client→server): Disassociate persistent identity.
  - Payload: empty.
- `0x0F` LOGIN_SUCCESS (server→client): Successful login.
  - Payload: empty.
- `0x10` LOGIN_FAILED (server→client): Failed login.
  - Payload: `uint16 code; uint8 reason_len; char reason[reason_len]`.
- `0x11` GET_PLAYER_STATS (client→server): Request player statistics.
  - Payload: empty.
- `0x12` PLAYER_STATS_DATA (server→client): Player statistics.
  - Payload: `double score_be; int32 games_played_be`.
- `0x13` GET_PROFILE_INFO (client→server): Request info for a specific profile.
  - Payload: `uint8 name_len; char name[name_len]`.
- `0x14` PROFILES_LIST (server→client): Response to LIST_PROFILES.
  - Payload: `char csv[]` (comma-separated profile names).

Reliability
- Reliable messages are sent with a sequence number (`seq_num`).
- Receiver must respond with an `ACK` packet with the same `seq_num`.
- Sender retries if `ACK` is not received within `timeout-ms`.
  - Retries up to `max-retries` times, with exponential backoff.
- Duplicate detection: A sliding window (`W=1024`) of received sequence numbers is
  maintained per session to drop duplicate or old packets.

Unreliable Messages
- Marked by setting the high bit of the `flags` field (`0x80`).
- Sent "fire-and-forget" without expecting an `ACK`.
- No sequencing or duplicate filtering is applied by the receiver.
- `seq_num` should be set to 0 by the sender.
- Used for non-critical, high-frequency updates (e.g., `SPECTATE_UPDATE`).

Sessions
- A session is identified by a `token` and the client's address:port.
- Session table size is `max-client-sessions` per listener.
- NAT rebinding: The address:port for a session can be updated if a valid
  packet arrives with the same token and a valid `seq_num`.
- Idle sessions are removed after `session-timeout` seconds.

Profiles
- The server runs one UDP listener thread per advertised profile.
- `LIST_PROFILES` returns profiles where `profile.visibility <= sessions.trust_level`.
- `GET_PROFILE_INFO` requests details for a named profile.
- On SIGHUP, config is reloaded and listeners are restarted.